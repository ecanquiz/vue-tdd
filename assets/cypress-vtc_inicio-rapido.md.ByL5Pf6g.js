import{_ as s,c as i,o as a,a3 as e}from"./chunks/framework.D2SfkUqD.js";const n="/vue-tdd/assets/configuring-component-testing1.B3qyg0nH.png",t="/vue-tdd/assets/configuring-component-testing2.aIbwtKgZ.png",p="/vue-tdd/assets/configuring-component-testing3.DuUdu1Ni.png",l="/vue-tdd/assets/configuring-component-testing4.BFIxJ3hs.png",F=JSON.parse('{"title":"Inicio R√°pido","description":"","frontmatter":{},"headers":[],"relativePath":"cypress-vtc/inicio-rapido.md","filePath":"cypress-vtc/inicio-rapido.md"}'),o={name:"cypress-vtc/inicio-rapido.md"},r=e('<h1 id="inicio-rapido" tabindex="-1">Inicio R√°pido <a class="header-anchor" href="#inicio-rapido" aria-label="Permalink to &quot;Inicio R√°pido&quot;">‚Äã</a></h1><div class="warning custom-block"><p class="custom-block-title">Advertencia</p><p>Cypress Component Testing se encuentra actualmente en versi√≥n beta.</p></div><p>Para seguir esta gu√≠a, necesitar√° una aplicaci√≥n Vue.</p><p>La forma m√°s r√°pida de comenzar a escribir pruebas de componentes para <a href="https://vuejs.org/guide/quick-start.html" target="_blank" rel="noreferrer">Vue es usar la propia herramienta de andamiaje de proyectos de Vue</a>.</p><p>Para crear un proyecto Vue:</p><ol><li>Ejecute el comando de andamio</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init vue@latest</span></span></code></pre></div><p>Siga las indicaciones para crear su aplicaci√≥n. Durante la instalaci√≥n, se le preguntar√° si desea instalar Cypress. Puede hacerlo ahora o en el siguiente paso.</p><ol start="2"><li>Agregue Cypress si no lo seleccion√≥ en las opciones de andamiaje de Vue</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install cypress -D</span></span></code></pre></div><ol start="3"><li>¬°Abre Cypress y sigue las indicaciones del Launchpad!</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cypress open</span></span></code></pre></div><h2 id="configuracion-de-pruebas-de-componentes" tabindex="-1">Configuraci√≥n de Pruebas de Componentes <a class="header-anchor" href="#configuracion-de-pruebas-de-componentes" aria-label="Permalink to &quot;Configuraci√≥n de Pruebas de Componentes&quot;">‚Äã</a></h2><p>Si seleccion√≥ Cypress durante las opciones de andamiaje de Vue, la prueba de componentes estar√° configurada y lista para funcionar.</p><p>Si no lo hizo, cuando ejecute Cypress por primera vez en un proyecto, la aplicaci√≥n le pedir√° que configure <strong>E2E Testing</strong> o <strong>Component Testing</strong>. Elija **Component Testing ** y siga los pasos del asistente de configuraci√≥n.</p><p><img src="'+n+'" alt="configuring-component-testing"></p><p><strong>Elija Component Testing</strong></p><p>La pantalla de configuraci√≥n del proyecto detecta autom√°ticamente su <em>framework</em> y <em>bundler</em>, que es Vue y Vite en nuestro caso. Cypress Component Testing utiliza la configuraci√≥n de su servidor de desarrollo existente para representar componentes, lo que ayuda a garantizar que sus componentes act√∫en y se muestren en las pruebas de la misma manera que lo hacen en producci√≥n</p><p><img src="'+t+'" alt="configuring-component-testing"></p><p>A continuaci√≥n, la configuraci√≥n de Cypress detectar√° su <em>framework</em> y generar√° todos los archivos de configuraci√≥n necesarios, y se asegurar√° de que todas las dependencias requeridas est√©n instaladas.</p><p><img src="'+p+'" alt="configuring-component-testing"></p><p><strong>La plataforma de lanzamiento de Cypress crear√° andamios para todos estos archivos por usted.</strong></p><p>Despu√©s de configurar la prueba de componentes, estar√° en la pantalla de selecci√≥n del navegador.</p><p>Elija el navegador de su elecci√≥n y haga clic en el bot√≥n <strong>&quot;Start Component Testing&quot;</strong> para abrir la aplicaci√≥n Cypress.</p><p><img src="'+l+`" alt="configuring-component-testing"></p><p><strong>Elija su navegador</strong></p><h2 id="creacion-de-un-componente" tabindex="-1">Creaci√≥n de un Componente <a class="header-anchor" href="#creacion-de-un-componente" aria-label="Permalink to &quot;Creaci√≥n de un Componente&quot;">‚Äã</a></h2><p>En este punto, su proyecto est√° configurado pero a√∫n no tiene componentes para probar.</p><p>En esta gu√≠a, usaremos un componente <code>&lt;Stepper/&gt;</code> con cero dependencias y un bit de estado interno, un <strong>&quot;counter&quot;</strong> que se puede incrementar y disminuir con dos botones.</p><blockquote><p>Si su componente usa complementos, solicitudes de red u otras configuraciones ambientales, necesitar√° trabajo adicional para montar su componente. Esto se trata en una <a href="https://docs.cypress.io/guides/component-testing/custom-mount-vue" target="_blank" rel="noreferrer">secci√≥n posterior</a>.</p></blockquote><p>Agregue el siguiente componente a su proyecto:</p><p>üìÉ<code>Stepper.vue</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ref } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> props</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineProps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;initial&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> emit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineEmits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;change&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(props.initial </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> aria-label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;decrement&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;-&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> data-cy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;counter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ count }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> aria-label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;increment&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;+&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><blockquote><p>Usamos la Composition API de Vue con <code>script setup</code> en esta gu√≠a, pero eso no es necesario para las pruebas de componentes de Cypress y tambi√©n puede usar la Options API. Obtenga m√°s informaci√≥n sobre <a href="https://vuejs.org/guide/introduction.html#api-styles" target="_blank" rel="noreferrer">estilos de la API de Vue</a>.</p></blockquote><h2 id="proximos-pasos" tabindex="-1">Pr√≥ximos Pasos <a class="header-anchor" href="#proximos-pasos" aria-label="Permalink to &quot;Pr√≥ximos Pasos&quot;">‚Äã</a></h2><p>A continuaci√≥n, aprenderemos a montar el componente <code>&lt;Stepper /&gt;</code> con el comando <code>mount</code>.</p>`,36),h=[r];function k(c,d,g,u,E,y){return a(),i("div",null,h)}const b=s(o,[["render",k]]);export{F as __pageData,b as default};
